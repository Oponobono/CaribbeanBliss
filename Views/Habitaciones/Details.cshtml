@model Habitacion

@{
    ViewData["Title"] = "Details";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles de la Habitación</title>
    <link rel="stylesheet" href="~/css/sideBar.css">
    <link rel="stylesheet" href="~/css/roles.css">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/menuCentral.css">
</head>
<body>
    <!-- Topbar Star -->
        <div class="container-fluid bg-dark px-5 d-lg-block d justify-content-around mb-2">
            <div class="row gx-0 p-2 align-items-center">
                <!-- Sección de botones visibles en pantallas pequeñas y grandes -->
                <div class="btn-group-container d-flex justify-content-end">
                    <a class="btn-modern d-flex d-lg-none" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Cerrar sesión"
                    asp-controller="Usuarios" asp-action="Logout">
                        <i class="fas fa-sign-out-alt"></i>
                    </a>

                    <a asp-controller="Usuarios" asp-action="Logout" class="btn-modern me-2 d-none d-lg-inline-flex">
                        <i class="fas fa-sign-out-alt"></i> Cerrar sesión
                    </a>
                </div>
            </div>
        </div>
        <!-- Topbar End -->
    <h1 class="d-flex justify-content-center mt-3">Detalles de la Habitación</h1>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-md-6">
                <div class="roles-card">
                    <div class="roles-card-header d-flex justify-content-between align-items-center">
                        <div class="text-center flex-grow-1">
                            <h2 class="roles-card-title">Detalles de la Habitación</h2>
                        </div>
                    </div>
                    <div class="roles-card-body p-3">
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Nombre)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Nombre)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Descripcion)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Descripcion)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Capacidad)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Capacidad)
                            </dd>
                            <dt class="col-sm-2">
                                Precio
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.PrecioHabitacion)
                            </dd>
                            <dt class="col-sm-2">
                                Estado
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.EstadoHabitacion.Nombre)
                            </dd>
                        </dl>
                    </div>
                    <div class="text-center mt-4">
                        <a asp-action="Edit" asp-route-id="@Model?.IdHabitacion" class="btn btn-primary me-2">
                            <i class="bi bi-pencil-square"></i> Editar
                        </a>
                        <a asp-action="Index" class="btn btn-secondary">
                            <i class="bi bi-arrow-left-circle"></i> Regresar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

 <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script src="~/js/index.js"></script>
    <script src="~/js/login.js"></script>
    <script src="~/js/sidebar.js"></script>
    <script src="~/js/roles.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/wow/wow.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Actualiza los labels al cargar la página
            document.querySelectorAll('.form-check-input').forEach(function (switchInput) {
                updateEstadoLabel(switchInput);
            });
        });

        // Función para actualizar el texto del label según el estado del switch
        function updateEstadoLabel(switchInput) {
            var label = switchInput.nextElementSibling;
            if (switchInput.checked) {
                label.textContent = "Activado";
                label.style.color = "green";  // Cambia el color de "Activado" a verde
            } else {
                label.textContent = "Inactivo";
                label.style.color = "red";  // Cambia el color de "Inactivo" a rojo
            }
        }
    </script>